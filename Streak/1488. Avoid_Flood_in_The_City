class Solution {
    public int[] avoidFlood(int[] rains) {
        int n = rains.length;
        int[] ans = new int[n];
        Arrays.fill(ans, 1);

        Map<Integer, Integer> lastRain = new HashMap<>();
        boolean[] zeroArr = new boolean[n];

        for(int i = 0; i<n; i++){
            if(rains[i] == 0){
                zeroArr[i] = true;
                continue;
            }
            int lake = rains[i];
            if(lastRain.containsKey(lake)){
                int prev = lastRain.get(lake);
                int dryDay = -1;
                for(int j = prev + 1; j < i; j++){
                    if(zeroArr[j]){
                        dryDay = j;
                        break;
                    }
                }
                if(dryDay == -1){
                    return new int[0];
                }
                ans[dryDay] = lake;
                zeroArr[dryDay] = false;
            }
            ans[i] = -1;
            lastRain.put(lake, i);
        }
        return ans;
    }
}
